#!/usr/bin/env python3

import os
import json
import requests
import argparse
import re
from libnmap.process import NmapProcess
from libnmap.parser import NmapParser, NmapParserException

# set parameters
parser = argparse.ArgumentParser()
parser.add_argument('-u', type=str, help='U = url or ip address, e.g. by.cuc.edu.cn')
args = parser.parse_args()
scan = args.u

# start a new nmap scan on localhost with some specific options
def do_scan(targets, options):
    parsed = None
    nmproc = NmapProcess(targets, options)
    rc = nmproc.run()
    if rc != 0:
        print("nmap scan failed: {0}".format(nmproc.stderr))
    try:
        parsed = NmapParser.parse(nmproc.stdout)
    except NmapParserException as e:
        print("Exception raised while parsing scan: {0}".format(e.msg))
    return parsed

def request_scan(url,nmap_report):


    if url.find('http://') == -1 or url.find('https://') == -1:
        url = "http://" + url
    try:
        r = requests.post(url, timeout=3)
    except:
        parser.print_help()
        parser.exit()

    headers = r.headers
    # Get server version and search it by sve-search
    server_get = headers.get('SERVER')
    if server_get:
        if (server_get.find('/') != -1):
            server = server_get[:server_get.find('/')]
            version = server_get[server_get.find('/') + 1:]
            server_get = server + ":" + version
        else:
            server_get = server_get

        command = "/root/cve-search/bin/search.py -p "+ server_get + " -o json"
        print(command)
        print('SERVER vulnerabilities result:')
        result = os.popen(command)
        a = list()
        for l in result:
            a.append(json.loads(l))

        for i in a:
            print(i)
    # Get language version and search it by sve-search
    language_get = headers.get('X-Powered-By')
    if language_get:
        if (language_get.find('/') != -1):
            language = language_get[:language_get.find('/')]
        else:
            language = language_get
        version = language_get[language_get.find('/')+1:]
        language_get = language + ":" + version
        command = "/root/cve-search/bin/search.py -p "+ language_get + " -o json"
        print(command)
        result = os.popen(command)
        a = list()
        for l in result:
            a.append(json.loads(l))

        for i in a:
            print(i)

    # Get OS version and search it by sve-search
    osinfo = {}
    host = nmap_report.hosts[0]
    for oscla in host.os.osmatches:
        serverinfo = oscla.name
        if (serverinfo):
            osinfo["name"] = serverinfo[:serverinfo.find(' ')]
            osinfo["osgen"] = serverinfo[serverinfo.find(' ') + 1:]
            break
    osresult = osinfo["name"] + ":" + osinfo["osgen"]
    if (osresult.find(' ') == -1):
        command = "/root/cve-search/bin/search.py -p " + osresult + " -o json"
        print('OS vulnerabilities result:')
        osfinalresult = os.popen(command)
        a = list()
        for l in osfinalresult:
            a.append(json.loads(l))
        if (a != None):
            for i in a:
                print(i['id'])
        else:
            print('Conclutations! No vulnerabilities found~')
    else:
        print("Can't get OS version")

if __name__ == "__main__":
    #scan a assets
    if scan:
        url = scan
        report = do_scan(url, "-p 443,80 -O")
        request_scan(url,report)
